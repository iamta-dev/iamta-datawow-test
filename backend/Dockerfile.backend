###################
# BUILD FOR LOCAL DEVELOPMENT
###################

FROM node:22-alpine As development

# Create app directory
WORKDIR /usr/src/app

# Copy application dependency manifests to the container image.
COPY --chown=node:node package*.json ./

# Install app dependencies using the `npm ci` command instead of `npm install`
RUN npm ci

# Copy Prisma schema
COPY --chown=node:node prisma ./prisma

# Comment out the entire prisma-dbml-generator block, including the closing `}`
RUN sed -i '/generator dbml/,/}/ s/^/\/\//' prisma/schema.prisma

# Generate Prisma Client
RUN npx prisma generate

# Bundle app source
COPY --chown=node:node . .

# Use the node user from the image (instead of the root user)
USER node

###################
# BUILD FOR PRODUCTION
###################

FROM node:22-alpine As build

WORKDIR /usr/src/app

COPY --chown=node:node package*.json ./

# Copy Prisma schema
COPY --chown=node:node prisma ./prisma

# Comment out the entire prisma-dbml-generator block, including the closing `}`
RUN sed -i '/generator dbml/,/}/ s/^/\/\//' prisma/schema.prisma

# Generate Prisma Client
RUN npx prisma generate

# In order to run `npm run build` we need access to the Nest CLI which is a dev dependency.
# In the previous development stage, we ran `npm ci` which installed all dependencies,
# so we can copy over the node_modules directory from the development image
COPY --chown=node:node --from=development /usr/src/app/node_modules ./node_modules
COPY --chown=node:node --from=development /usr/src/app/prisma ./prisma

COPY --chown=node:node . .

# Run the build command which creates the production bundle
RUN npm run build

# Set NODE_ENV environment variable
ENV NODE_ENV production

# Running `npm ci` removes the existing node_modules directory and passing in --only=production ensures that only the production dependencies are installed.
# This ensures that the node_modules directory is as optimized as possible
RUN npm ci --only=production && npm cache clean --force
RUN sed -i '/generator dbml/,/}/ s/^/\/\//' prisma/schema.prisma
RUN npx prisma generate

USER node

###################
# PRODUCTION
###################

FROM node:22-alpine As production

# Copy the bundled code from the build stage to the production image
COPY --chown=node:node --from=build /usr/src/app/package*.json ./
COPY --chown=node:node --from=build /usr/src/app/prisma ./prisma
COPY --chown=node:node --from=build /usr/src/app/dist ./dist
COPY --chown=node:node --from=build /usr/src/app/public ./public
COPY --chown=node:node --from=build /usr/src/app/node_modules ./node_modules

# Start the server using the production build
CMD [ "node", "dist/src/main.js" ]